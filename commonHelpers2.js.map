{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-form.js"],"sourcesContent":["// const FEEDBACK_MESSAGE_KEY = 'feedback-message';\n\n// const form = document.querySelector('.feedback-form');\n// const input = form.querySelector('input');\n// const textarea = form.querySelector('textarea');\n\n// const initialMessage = localStorage.getItem(FEEDBACK_MESSAGE_KEY);\n// const initialMeil = localStorage.getItem(FEEDBACK_MAIL_KEY);\n\n// if (initialMessage) {\n//   textarea.value = initialMessage;\n// }\n\n// form.addEventListener('submit', event => {\n//   event.preventDefault();\n\n//   const emailValue = event.target.email.value.trim();\n//   const passwordlValue = event.target.message.value.trim();\n//   if (!emailValue || !passwordlValue) {\n//     alert('All form fields must be filled in');\n//     return;\n//   }\n\n// try {\n//   const initialFormdata = localStorage.getItem(FEEDBACK_MESSAGE_KEY);\n//   form.elements.forEach(element => {\n//     const storageValue = initialFormdata[element.name];\n//     if (storageValue) {\n//       element.value = storageValue;\n//     }\n//   });\n// } catch (e) {\n//   console.error('error');\n// }\n\n//   const formData = new FormData(form);\n//   const formObject = {};\n//   formData.forEach((value, key) => {\n//     formObject[key] = value;\n//     localStorage.removeItem(FEEDBACK_MESSAGE_KEY);\n//     form.reset();\n//   });\n//   console.log(formObject);\n// });\n\n// form.addEventListener('input', event => {\n//   const message = event.target.value;\n//   localStorage.setItem(FEEDBACK_MESSAGE_KEY, message);\n// });\n\n// input.addEventListener('input', event => {\n//   const email = event.target.value;\n//   localStorage.setItem(FEEDBACK_MESSAGE_KEY, email);\n// });\n\nconst FEEDBACK_DATA_KEY = 'feedback';\n\nconst form = document.querySelector('.feedback-form');\n// const textarea = form.querySelector('textarea');\n\n// const myLocalStorage = {\n//   get: (key, json = false) => {\n//     const data = localStorage.getItem(key);\n\n//     if (!json) return data;\n\n//     try {\n//       return JSON.parse(data);\n//     } catch (e) {\n//       console.error(e);\n//     }\n//   },\n//   set: (key, data, json = false) => {\n//     localStorage.setItem(key, json ? JSON.stringify(data) : data);\n//   },\n//   remove: key => {\n//     localStorage.removeItem(key);\n//   },\n// };\n\ntry {\n  const initialFormData = JSON.parse(localStorage.getItem(FEEDBACK_DATA_KEY));\n\n  Array.from(form.elements).forEach(element => {\n    const storageValue = initialFormData[element.name];\n    if (storageValue) {\n      element.value = storageValue;\n    }\n  });\n} catch (e) {\n  console.error('PARSE STORAGE FORM ERROR');\n}\n\nform.addEventListener('input', () => {\n  const formData = new FormData(form);\n\n  const formObject = {};\n\n  formData.forEach((value, key) => {\n    formObject[key] = value;\n  });\n\n  localStorage.setItem(FEEDBACK_DATA_KEY, JSON.stringify(formObject));\n});\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const emailValue = event.target.email.value.trim();\n  const messageValue = event.target.message.value.trim();\n\n  if (!emailValue || !messageValue) {\n    alert('All form fields must be filled in');\n    return;\n  }\n\n  const formText = {\n    email: emailValue,\n    message: messageValue,\n  };\n  console.log(formText);\n\n  localStorage.removeItem(FEEDBACK_DATA_KEY);\n\n  form.reset();\n});\n"],"names":["FEEDBACK_DATA_KEY","form","initialFormData","element","storageValue","formData","formObject","value","key","event","emailValue","messageValue"],"mappings":"oDAuDA,MAAMA,EAAoB,WAEpBC,EAAO,SAAS,cAAc,gBAAgB,EAuBpD,GAAI,CACF,MAAMC,EAAkB,KAAK,MAAM,aAAa,QAAQF,CAAiB,CAAC,EAE1E,MAAM,KAAKC,EAAK,QAAQ,EAAE,QAAQE,GAAW,CAC3C,MAAMC,EAAeF,EAAgBC,EAAQ,MACzCC,IACFD,EAAQ,MAAQC,EAEtB,CAAG,CACH,MAAE,CACA,QAAQ,MAAM,0BAA0B,CAC1C,CAEAH,EAAK,iBAAiB,QAAS,IAAM,CACnC,MAAMI,EAAW,IAAI,SAASJ,CAAI,EAE5BK,EAAa,CAAA,EAEnBD,EAAS,QAAQ,CAACE,EAAOC,IAAQ,CAC/BF,EAAWE,GAAOD,CACtB,CAAG,EAED,aAAa,QAAQP,EAAmB,KAAK,UAAUM,CAAU,CAAC,CACpE,CAAC,EAEDL,EAAK,iBAAiB,SAAUQ,GAAS,CACvCA,EAAM,eAAc,EAEpB,MAAMC,EAAaD,EAAM,OAAO,MAAM,MAAM,OACtCE,EAAeF,EAAM,OAAO,QAAQ,MAAM,OAEhD,GAAI,CAACC,GAAc,CAACC,EAAc,CAChC,MAAM,mCAAmC,EACzC,MACD,CAMD,QAAQ,IAJS,CACf,MAAOD,EACP,QAASC,CACb,CACsB,EAEpB,aAAa,WAAWX,CAAiB,EAEzCC,EAAK,MAAK,CACZ,CAAC"}